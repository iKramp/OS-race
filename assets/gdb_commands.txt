set disassembly-flavor intel
target remote localhost:1234
layout src
set directories std/src/:kernel/src/
symbol-file kernel_build_files/kernel.elf

python
import sys
import gdb

sys.path.append("/home/nejc/.rustup/toolchains/nightly-2024-10-01-x86_64-unknown-linux-gnu/lib/rustlib/etc/")
import gdb_lookup
import rust_types
printer = gdb_lookup.RustPrettyPrinter("rust")
gdb.pretty_printers.append(printer)
printer.add(rust_types.RustType.ENUM,          gdb_lookup.enum_provider)
printer.add(rust_types.RustType.STD_STRING,    gdb_lookup.StdStringProvider)
printer.add(rust_types.RustType.STD_OS_STRING, gdb_lookup.StdOsStringProvider)
printer.add(rust_types.RustType.STD_STR,       gdb_lookup.StdStrProvider)
printer.add(rust_types.RustType.STD_SLICE,     gdb_lookup.StdSliceProvider)
printer.add(rust_types.RustType.STD_VEC,       gdb_lookup.StdVecProvider)
printer.add(rust_types.RustType.STD_VEC_DEQUE, gdb_lookup.StdVecDequeProvider)
printer.add(rust_types.RustType.STD_BTREE_SET, gdb_lookup.StdBTreeSetProvider)
printer.add(rust_types.RustType.STD_BTREE_MAP, gdb_lookup.StdBTreeMapProvider)
printer.add(rust_types.RustType.STD_HASH_MAP,  gdb_lookup.hashmap_provider)
printer.add(rust_types.RustType.STD_HASH_SET,  gdb_lookup.hashset_provider)
printer.add(rust_types.RustType.STD_RC,        gdb_lookup.StdRcProvider)
printer.add(rust_types.RustType.STD_ARC, lambda valobj: gdb_lookup.StdRcProvider(valobj, is_atomic=True))

printer.add(rust_types.RustType.STD_CELL,      gdb_lookup.StdCellProvider)
printer.add(rust_types.RustType.STD_REF,       gdb_lookup.StdRefProvider)
printer.add(rust_types.RustType.STD_REF_MUT,   gdb_lookup.StdRefProvider)
printer.add(rust_types.RustType.STD_REF_CELL,  gdb_lookup.StdRefCellProvider)

printer.add(rust_types.RustType.STD_NONZERO_NUMBER, gdb_lookup.StdNonZeroNumberProvider)

end

c
